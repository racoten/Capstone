Microsoft (R) COFF/PE Dumper Version 14.36.32537.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file test.o

File Type: COFF OBJECT

testing:
  0000000000000000: 40 56              push        rsi
  0000000000000002: 57                 push        rdi
  0000000000000003: 48 83 EC 48        sub         rsp,48h
  0000000000000007: 48 8D 44 24 28     lea         rax,[rsp+28h]
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[$SG101001]
                    00
  0000000000000013: 48 8B F8           mov         rdi,rax
  0000000000000016: 48 8B F1           mov         rsi,rcx
  0000000000000019: B9 0F 00 00 00     mov         ecx,0Fh
  000000000000001E: F3 A4              rep movs    byte ptr [rdi],byte ptr [rsi]
  0000000000000020: 48 8D 0D 00 00 00  lea         rcx,[$SG101002]
                    00
  0000000000000027: FF 15 00 00 00 00  call        qword ptr [__imp_GetModuleHandleA]
  000000000000002D: 48 8D 54 24 28     lea         rdx,[rsp+28h]
  0000000000000032: 48 8B C8           mov         rcx,rax
  0000000000000035: FF 15 00 00 00 00  call        qword ptr [__imp_GetProcAddress]
  000000000000003B: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000040: 4C 8B 44 24 20     mov         r8,qword ptr [rsp+20h]
  0000000000000045: 48 8D 54 24 28     lea         rdx,[rsp+28h]
  000000000000004A: 48 8D 0D 00 00 00  lea         rcx,[$SG101003]
                    00
  0000000000000051: FF 15 00 00 00 00  call        qword ptr [__imp_MSVCRT$printf]
  0000000000000057: 33 C0              xor         eax,eax
  0000000000000059: 48 83 C4 48        add         rsp,48h
  000000000000005D: 5F                 pop         rdi
  000000000000005E: 5E                 pop         rsi
  000000000000005F: C3                 ret
  0000000000000060: CC                 int         3
  0000000000000061: CC                 int         3
  0000000000000062: CC                 int         3
  0000000000000063: CC                 int         3
  0000000000000064: CC                 int         3
  0000000000000065: CC                 int         3
  0000000000000066: CC                 int         3
  0000000000000067: CC                 int         3
  0000000000000068: CC                 int         3
  0000000000000069: CC                 int         3
  000000000000006A: CC                 int         3
  000000000000006B: CC                 int         3
  000000000000006C: CC                 int         3
  000000000000006D: CC                 int         3
  000000000000006E: CC                 int         3
  000000000000006F: CC                 int         3
getComputerName:
  0000000000000070: 40 57              push        rdi
  0000000000000072: 48 81 EC 30 01 00  sub         rsp,130h
                    00
  0000000000000079: 0F B6 05 00 00 00  movzx       eax,byte ptr [$SG101008]
                    00
  0000000000000080: 88 44 24 30        mov         byte ptr [rsp+30h],al
  0000000000000084: 48 8D 44 24 31     lea         rax,[rsp+31h]
  0000000000000089: 48 8B F8           mov         rdi,rax
  000000000000008C: 33 C0              xor         eax,eax
  000000000000008E: B9 FF 00 00 00     mov         ecx,0FFh
  0000000000000093: F3 AA              rep stos    byte ptr [rdi]
  0000000000000095: C7 44 24 20 00 01  mov         dword ptr [rsp+20h],100h
                    00 00
  000000000000009D: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  00000000000000A2: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000000A7: FF 15 00 00 00 00  call        qword ptr [__imp_GetComputerNameA]
  00000000000000AD: 85 C0              test        eax,eax
  00000000000000AF: 74 12              je          00000000000000C3
  00000000000000B1: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  00000000000000B6: 48 8D 0D 00 00 00  lea         rcx,[$SG101010]
                    00
  00000000000000BD: FF 15 00 00 00 00  call        qword ptr [__imp_MSVCRT$printf]
  00000000000000C3: 33 C0              xor         eax,eax
  00000000000000C5: 48 81 C4 30 01 00  add         rsp,130h
                    00
  00000000000000CC: 5F                 pop         rdi
  00000000000000CD: C3                 ret
  00000000000000CE: CC                 int         3
  00000000000000CF: CC                 int         3
  00000000000000D0: CC                 int         3
  00000000000000D1: CC                 int         3
  00000000000000D2: CC                 int         3
  00000000000000D3: CC                 int         3
  00000000000000D4: CC                 int         3
  00000000000000D5: CC                 int         3
  00000000000000D6: CC                 int         3
  00000000000000D7: CC                 int         3
  00000000000000D8: CC                 int         3
  00000000000000D9: CC                 int         3
  00000000000000DA: CC                 int         3
  00000000000000DB: CC                 int         3
  00000000000000DC: CC                 int         3
  00000000000000DD: CC                 int         3
  00000000000000DE: CC                 int         3
  00000000000000DF: CC                 int         3
go:
  00000000000000E0: 48 83 EC 38        sub         rsp,38h
  00000000000000E4: C7 44 24 20 02 00  mov         dword ptr [rsp+20h],2
                    00 00
  00000000000000EC: 8B 15 00 00 00 00  mov         edx,dword ptr [tval]
  00000000000000F2: 48 8D 0D 00 00 00  lea         rcx,[$SG101015]
                    00
  00000000000000F9: FF 15 00 00 00 00  call        qword ptr [__imp_MSVCRT$printf]
  00000000000000FF: 8B 05 00 00 00 00  mov         eax,dword ptr [tval]
  0000000000000105: 8B 4C 24 20        mov         ecx,dword ptr [rsp+20h]
  0000000000000109: 8D 44 08 01        lea         eax,[rax+rcx+1]
  000000000000010D: 89 05 00 00 00 00  mov         dword ptr [tval],eax
  0000000000000113: 8B 15 00 00 00 00  mov         edx,dword ptr [tval]
  0000000000000119: 48 8D 0D 00 00 00  lea         rcx,[$SG101016]
                    00
  0000000000000120: FF 15 00 00 00 00  call        qword ptr [__imp_MSVCRT$printf]
  0000000000000126: E8 00 00 00 00     call        testing
  000000000000012B: E8 00 00 00 00     call        getComputerName
  0000000000000130: 33 C0              xor         eax,eax
  0000000000000132: 48 83 C4 38        add         rsp,38h
  0000000000000136: C3                 ret

  Summary

           5 .bss
          40 .chks64
          7A .data
          98 .debug$S
          5D .drectve
          24 .pdata
         137 .text$mn
          20 .xdata
